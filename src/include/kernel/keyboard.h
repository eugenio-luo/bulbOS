#ifndef _KERNEL_KEYBOARD_H
#define _KERNEL_KEYBOARD_H

#include <stdint.h>

typedef enum {
        KEY_ESCAPE = 1, KEY_F1, KEY_F2,
        KEY_F3, KEY_F4, KEY_F5, KEY_F6,
        KEY_F7, KEY_F8, KEY_F9, KEY_F10,
        KEY_F11, KEY_F12, KEY_1, KEY_2,
        KEY_3, KEY_4, KEY_5, KEY_6, KEY_7,
        KEY_8, KEY_9, KEY_0, KEY_A, KEY_B,
        KEY_C, KEY_D, KEY_E, KEY_F, KEY_G,
        KEY_H, KEY_I, KEY_J, KEY_K, KEY_L,
        KEY_M, KEY_N, KEY_O, KEY_P, KEY_Q,
        KEY_R, KEY_S, KEY_T, KEY_U, KEY_V,
        KEY_W, KEY_X, KEY_Y, KEY_Z, KEY_TAB,
        KEY_TILDE, KEY_LALT, KEY_LSHIFT,
        KEY_LCTRL, KEY_SPACE, KEY_COMMA,
        KEY_PERIOD, KEY_SLASH, KEY_SEMICOLON,
        KEY_DASH, KEY_APOS, KEY_LSBRACKET,
        KEY_CAPSLOCK, KEY_ENTER, KEY_RSBRACKET,
        KEY_BACKSLASH, KEY_BACKSPACE, KEY_NUMPAD1,
        KEY_NUMPAD2, KEY_NUMPAD3, KEY_NUMPAD4,
        KEY_NUMPAD5, KEY_NUMPAD6, KEY_NUMPAD7,
        KEY_NUMPAD8, KEY_NUMPAD9, KEY_NUMPAD0,
        KEY_NUMPAD_PERIOD, KEY_NUMLOCK,
        KEY_NUMPAD_PLUS, KEY_NUMPAD_DASH, KEY_EQUAL,
        KEY_NUMPAD_STAR, KEY_SCROLLLOCK, KEY_SEARCH,
        KEY_RALT, KEY_RCTRL, KEY_PREVTRACK,
        KEY_FAV, KEY_LGUI, KEY_REFRESH, KEY_DVOL,
        KEY_MUTE, KEY_RGUI, KEY_WSTOP, KEY_CALC,
        KEY_APPS, KEY_UVOL, KEY_WFORWARD, KEY_PLAY,
        KEY_POWER, KEY_WBACK, KEY_WHOME, KEY_STOP,
        KEY_SLEEP, KEY_MYPC, KEY_EMAIL, KEY_NUMPAD_SLASH,
        KEY_NEXTTRACK, KEY_MEDIA, KEY_NUMPAD_ENTER,
        KEY_WAKE, KEY_END, KEY_DEL, KEY_INSERT, KEY_LEFT,
        KEY_DOWN, KEY_RIGHT, KEY_UP, KEY_PDOWN, KEY_PUP,
        KEY_HOME, KEY_PRTSC, KEY_PAUSE, KEY_RSHIFT,
} kb_keycode_t;

typedef struct {
        uint8_t ascii;
        uint8_t flags;
        uint16_t keysym;
} kb_keysym_t;
        
#define KB_SHIFT_FLAG       (1 << 21)
#define KB_CTRL_FLAG        (1 << 20)
#define KB_ALT_FLAG         (1 << 19)
#define KB_ALTGR_FLAG       (1 << 18)
#define KB_GUI_FLAG         (1 << 17)
#define KB_FN_FLAG          (1 << 16)

#define KEYSYM(NAME, SHIFT_NAME, NUM) \
        SYM_##NAME = NUM, \
        SYM_##SHIFT_NAME = NUM + KB_SHIFT_FLAG, \
        SYM_ALT_##NAME = NUM + KB_ALT_FLAG, \
        SYM_ALT_##SHIFT_NAME = NUM + KB_ALT_FLAG + KB_SHIFT_FLAG, \
        SYM_CTRL_##NAME = NUM + KB_CTRL_FLAG, \
        SYM_CTRL_##SHIFT_NAME = NUM + KB_CTRL_FLAG + KB_SHIFT_FLAG

#define DEF_KEYSYM(NAME, NUM)   KEYSYM(NAME, SHIFT_##NAME, NUM)

typedef enum {
        DEF_KEYSYM(ESCAPE, 1), DEF_KEYSYM(F1, 2), DEF_KEYSYM(F2, 3),
        DEF_KEYSYM(F3, 4), DEF_KEYSYM(F4, 5), DEF_KEYSYM(F5, 6), DEF_KEYSYM(F6, 7),
        DEF_KEYSYM(F7, 8), DEF_KEYSYM(F8, 9), DEF_KEYSYM(F9, 10), DEF_KEYSYM(F10, 11),
        DEF_KEYSYM(F11, 12), DEF_KEYSYM(F12, 13), DEF_KEYSYM(1, 14), DEF_KEYSYM(2, 15),
        DEF_KEYSYM(3, 16), DEF_KEYSYM(4, 17), DEF_KEYSYM(5, 18), DEF_KEYSYM(6, 19),
        DEF_KEYSYM(7, 20), DEF_KEYSYM(8, 21), DEF_KEYSYM(9, 22), DEF_KEYSYM(0, 23),
        KEYSYM(a, A, 24), KEYSYM(b, B, 25), KEYSYM(c, C, 26), KEYSYM(d, D, 27),
        KEYSYM(e, E, 28), KEYSYM(f, F, 29), KEYSYM(g, G, 30), KEYSYM(h, H, 31),
        KEYSYM(i, I, 32), KEYSYM(j, J, 33), KEYSYM(k, K, 34), KEYSYM(l, L, 35),
        KEYSYM(m, M, 36), KEYSYM(n, N, 37), KEYSYM(o, O, 38), KEYSYM(p, P, 39),
        KEYSYM(q, Q, 40), KEYSYM(r, R, 41), KEYSYM(s, S, 42), KEYSYM(t, T, 43),
        KEYSYM(u, U, 44), KEYSYM(v, V, 45), KEYSYM(w, W, 46), KEYSYM(x, X, 47),
        KEYSYM(y, Y, 48), KEYSYM(z, Z, 49), DEF_KEYSYM(TAB, 50),
        DEF_KEYSYM(TILDE, 51),  DEF_KEYSYM(SPACE, 55), DEF_KEYSYM(COMMA, 56),
        DEF_KEYSYM(PERIOD, 57), DEF_KEYSYM(SLASH, 58), DEF_KEYSYM(SEMICOLON, 59),
        DEF_KEYSYM(DASH, 60), DEF_KEYSYM(APOS, 61), DEF_KEYSYM(LSBRACKET, 62),
        DEF_KEYSYM(ENTER, 64), DEF_KEYSYM(RSBRACKET, 65), DEF_KEYSYM(BACKSLASH, 66), 
        DEF_KEYSYM(BACKSPACE, 67), DEF_KEYSYM(EQUAL, 82), DEF_KEYSYM(UP, 119),
        DEF_KEYSYM(LEFT, 116), DEF_KEYSYM(DOWN, 117), DEF_KEYSYM(RIGHT, 118),
        /* DEF_KEYSYM(NUMPAD1), DEF_KEYSYM(NUMPAD2), 
        DEF_KEYSYM(NUMPAD3), DEF_KEYSYM(NUMPAD4), DEF_KEYSYM(NUMPAD5), 
        DEF_KEYSYM(NUMPAD6), DEF_KEYSYM(NUMPAD7), DEF_KEYSYM(NUMPAD8), 
        DEF_KEYSYM(NUMPAD9), DEF_KEYSYM(NUMPAD0), DEF_KEYSYM(NUMPAD_PERIOD), 
        DEF_KEYSYM(NUMPAD_PLUS), DEF_KEYSYM(NUMPAD_DASH),
        DEF_KEYSYM(NUMPAD_STAR), DEF_KEYSYM(SEARCH),
        DEF_KEYSYM(PREVTRACK), DEF_KEYSYM(FAV), DEF_KEYSYM(REFRESH), DEF_KEYSYM(DVOL),
        DEF_KEYSYM(MUTE), DEF_KEYSYM(WSTOP), DEF_KEYSYM(CALC), DEF_KEYSYM(PAUSE), 
        DEF_KEYSYM(APPS), DEF_KEYSYM(UVOL), DEF_KEYSYM(WFORWARD), DEF_KEYSYM(PLAY),
        DEF_KEYSYM(POWER), DEF_KEYSYM(WBACK), DEF_KEYSYM(WHOME), DEF_KEYSYM(STOP),
        DEF_KEYSYM(SLEEP), DEF_KEYSYM(MYPC), DEF_KEYSYM(EMAIL), DEF_KEYSYM(NUMPAD_SLASH),
        DEF_KEYSYM(NEXTTRACK), DEF_KEYSYM(MEDIA), DEF_KEYSYM(NUMPAD_ENTER),
        DEF_KEYSYM(WAKE), DEF_KEYSYM(END), DEF_KEYSYM(DEL), DEF_KEYSYM(INSERT),
        DEF_KEYSYM(PDOWN), DEF_KEYSYM(PUP), DEF_KEYSYM(HOME), DEF_KEYSYM(PRTSC), */
} kb_keysym_enum;

#define KB_RELEASE_FLAG     (1 << 31)

#define COMMAND_QUEUE_CAP   15

void keyboard_queuecommand(uint8_t command);
void keyboard_init(void);

#endif
